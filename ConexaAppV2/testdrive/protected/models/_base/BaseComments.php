<?php

/**
 * This is the model base class for the table "comments".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Comments".
 *
 * Columns in table "comments" available as properties of the model,
 * followed by relations of table "comments" available as properties of the model.
 *
 * @property integer $id
 * @property string $user_owner
 * @property string $comment
 * @property string $datetime
 * @property integer $idPost
 *
 * @property Post $idPost0
 */
abstract class BaseComments extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'comments';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Comments|Comments', $n);
	}

	public static function representingColumn() {
		return 'user_owner';
	}

	public function rules() {
		return array(
			array('user_owner, comment, datetime, idPost', 'required'),
			array('idPost', 'numerical', 'integerOnly'=>true),
			array('user_owner', 'length', 'max'=>50),
			array('comment', 'length', 'max'=>250),
			array('id, user_owner, comment, datetime, idPost', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idPost0' => array(self::BELONGS_TO, 'Post', 'idPost'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_owner' => Yii::t('app', 'User Owner'),
			'comment' => Yii::t('app', 'Comment'),
			'datetime' => Yii::t('app', 'Datetime'),
			'idPost' => null,
			'idPost0' => null,
		);
	}

	public function search() {
		
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_owner', $this->user_owner, true);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('datetime', $this->datetime, true);
		$criteria->compare('idPost', $this->idPost);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}